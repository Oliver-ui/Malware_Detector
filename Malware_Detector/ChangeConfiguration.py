from procmon_parser import load_configuration, dump_configuration, Rule
import os

class ConfigurationChange(object):

	def __init__(self):
		#
		self.init_configuration = "C:\\Users\\12051\\Desktop\\Malware_Detector\\ProcmonConfiguration.pmc"
		self.target_configuration = "C:\\Users\\12051\\Desktop\\Malware_Detector\\NewConfiguration\\NewConfiguration.pmc"
		self.file_names_path = "C:\\Users\\12051\\Desktop\\Malware_Detector\\UncheckedFileName\\File_Name.txt"

	# Load the initial configuration of procmon in sandbox
	def load_initial_configuration(self):
		with open(self.init_configuration, "rb") as f:
			config = load_configuration(f)
			f.close()
		
		return config
	
	# Write the file name that need to be checked
	def write_file_name(self, files_list):
		with open(self.file_names_path, "w") as f:
			for file_name in files_list:
				f.write(file_name)
				f.write('\n')
			f.close()

	# Change the configuration of procmon by adding the name of submitted files
	def change_configuration(self, config):

		# Read all file names
		with open(self.file_names_path, "r") as f:
			file_name_list = f.readlines()

			# Add each file name into procmon filter
			for file in file_name_list:
				name = file.strip()
				print(name)
				new_rules = [Rule('Process_Name', 'contains', name)]
				config["FilterRules"] = new_rules + config["FilterRules"]


		config["DestructiveFilter"] = 1

		# Change the configuration file
		with open(self.target_configuration, "wb") as f:
			dump_configuration(config, f)

